#!/usr/bin/env node
var benchmark = require('benchmark')
var shortid = require('shortid')
var uuid4 = require('uuid/v4')
var chalk = require('chalk')
var rndm = require('rndm')
var uid = require('uid-safe')

var nonSecure = require('../non-secure')
var generate = require('../generate')
var nanoid = require('../')

var suite = new benchmark.Suite()

function formatNumber (number) {
  return String(number)
    .replace(/\d\d\d$/, ',$&')
    .replace(/^(\d)(\d\d\d)/, '$1,$2')
}

suite
  .add('nanoid', function () {
    nanoid()
  })
  .add('nanoid/generate', function () {
    generate('1234567890abcdef-', 10)
  })
  .add('uid.sync', function () {
    uid.sync(21)
  })
  .add('uuid/v4', function () {
    uuid4()
  })
  .add('shortid', function () {
    shortid()
  })
  .add('nanoid/non-secure', function () {
    nonSecure()
  })
  .add('rndm', function () {
    rndm(21)
  })
  .on('cycle', function (event) {
    var name = event.target.name.padEnd('nanoid/non-secure'.length)
    var hz = formatNumber(event.target.hz.toFixed(0)).padStart(9)
    process.stdout.write(name + '   ' + chalk.bold(hz) + ' ops/sec\n')
  })
  .run()
