#!/usr/bin/env node

var sizeLimit = require('size-limit')
var chalk = require('chalk')
var path = require('path')
var fs = require('fs')

var filePath = path.join(process.cwd(), process.argv[2])
var best = {
  value: '',
  size: Infinity
}
var lastString

function shuffle (a) {
  var j, x, i
  for (i = a.length - 1; i > 0; i--) {
    j = Math.floor(Math.random() * (i + 1))
    x = a[i]
    a[i] = a[j]
    a[j] = x
  }
  return a
}

function saveFirstString () {
  var data = fs.readFileSync(filePath, 'utf8')
  data.replace(/[A-Za-z0-9~_]{58}/g, function (match) {
    lastString = match
  })
}

function shuffleStringInFile () {
  var data = fs.readFileSync(filePath, 'utf8')

  var result = data.replace(/[A-Za-z0-9~_]{64}/g, function (match) {
    lastString = shuffle(match.split('')).join('')
    return lastString
  })

  fs.writeFileSync(filePath + '', result, 'utf8')
}

function checkSize () {
  sizeLimit(filePath).then(function (size) {
    if (size.gzip < best.size) {
      best.value = lastString
      best.size = size.gzip
      process.stdout.write(
        chalk.green.bold(best.size + 'B') + ' ' + best.value + '\n')
    }
    shuffleStringInFile()
    checkSize()
  })
}

saveFirstString()
if (typeof lastString === 'undefined') {
  process.stderr.write(chalk.red('Alphabet was not found') + '\n')
  process.exit(1)
}
checkSize()
